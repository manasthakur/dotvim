" Manas's pluginless vimrc that should work on most Vim versions

" BASIC SETTINGS
" ==============

set tabstop=4	                    " Number of spaces a TAB character is shown as
set softtabstop=4                   " Number of spaces inserted per TAB
set shiftwidth=4                    " Number of spaces for auto-indentation
set expandtab                       " Expand tabs to spaces
set autoindent                      " Start next line from where the previous one did

filetype plugin indent on           " Enable filetype-based plugins and indentation
syntax enable                       " Enable syntax-coloring
runtime macros/matchit.vim	        " Load vim's builtin matchit plugin
set showmatch                       " Highlight matching parenthesis

set backspace=indent,eol,start      " Make backspace work everywhere
set display=lastline	            " Don't show '@' lines when a line doesn't fit the screen
set formatoptions+=j	            " Remove comment-leader when joining commented lines

set hidden                          " Enable opening other file while keeping the previous one in buffer
set confirm                         " Confirm when closing vim with unsaved buffers
set scrolloff=1                     " Keep one extra line while scrolling for context
set laststatus=2                    " Display statusline all the time
set wildmenu                        " Visual autocomplete for command menu

set ruler                           " Show ruler with line and column numbers at bottom-right
set number                          " Show line numbers on the left hand side

set nohlsearch                      " Don't highlight matches (not needed in some Vim versions)
set incsearch                       " Show search matches as you type

set ignorecase                      " Ignore case while searching
set smartcase                       " Don't ignore case when search term consists capital letters

set history=200                     " Keep 200 lines of command line history
set ttimeout                        " Time out for key codes
set ttimeoutlen=100                 " Wait up to 100ms after Esc for special key
set pastetoggle=<leader>z	        " Toggle paste using '<leader>z'
set mouse=a                         " Enable mouse for all activities

" MAPPINGS
" ========

" Scroll using Ctrl-Dn and Ctrl-Up (won't work on macOS)
noremap <C-Down> <C-F>
noremap <C-Up> <C-B>

" Buffers
nnoremap <leader>w :update<CR>
nnoremap <leader>q :bdelete<CR>
nnoremap ]b :bnext<CR>
nnoremap [b :bprevious<CR>

" Tabs
nnoremap ]t :tabnext<CR>
nnoremap [t :tabprevious<CR>

" Location-lists
nnoremap ]q :lnext<CR>
nnoremap [q :lprevious<CR>

" Make 'Y' behave like other capitals
nnoremap Y y$

" Run macro from register 'q' with 'Q'
nnoremap Q @q

" Auto-insert ending brace and a new line to write above
inoremap {<CR> {<CR>}<C-O>O

" Toggle spellcheck
nnoremap <leader>s :set spell!<CR>:set spell?<CR>

" SEARCHING
" =========

" Enhance the behaviour of 'grep'
set grepprg=grep\ -IRn\ --exclude=tags\ $*\ .

" Grep and open the results in the quickfix window
function! Search()
    let grep_term = input("Grep: ")
    if !empty(grep_term)
        execute 'silent lgrep!' grep_term | lopen
    else
        echo
    endif
    redraw!
endfunction
nnoremap <leader>a :call Search()<CR>
nmap <leader>c <leader>a<C-r><C-w><CR>

" COMPLETION
" ==========

" Don't complete from include files
set complete-=i         

" Complete filenames, tags and keywords with <Tab>
function! CleverTab()
    let str = strpart(getline('.'), 0, col('.')-1)
    if empty(matchstr(str, '[^ \t]*$'))
        return "\<Tab>"
    else
        if match(str, '\/') != -1
            return "\<C-X>\<C-F>"
        elseif !empty(tagfiles())
            return "\<C-X>\<C-]>"
        else
            return "\<C-P>"
        endif
    endif
endfunction
inoremap <Tab> <C-R>=CleverTab()<CR>

" Make '<CR>' select an entry from completion-menu
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

" Type '<Tab>' literal at end-of-lines using <Shift-Tab>
inoremap <S-Tab> <C-V><Tab>

